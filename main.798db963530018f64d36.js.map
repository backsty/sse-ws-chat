{"version":3,"file":"main.798db963530018f64d36.js","mappings":"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","sources":["webpack://sse-ws-chat/./src/frontend/js/websocket.js","webpack://sse-ws-chat/./src/frontend/js/templates.js","webpack://sse-ws-chat/./src/frontend/index.js","webpack://sse-ws-chat/./src/frontend/js/chat.js"],"sourcesContent":["export default class WebSocketClient {\n  constructor(url) {\n    this.url = url;\n    this.ws = null;\n    this.handlers = new Map();\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      try {\n        this.ws = new WebSocket(this.url);\n        this.bindEvents(resolve, reject);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  bindEvents(resolve, reject) {\n    this.ws.onopen = () => {\n      console.log('WebSocket соединение установлено');\n      this.reconnectAttempts = 0;\n      resolve();\n    };\n\n    this.ws.onerror = (error) => {\n      console.error('WebSocket ошибка:', error);\n      reject(error);\n    };\n\n    this.ws.onclose = () => {\n      console.log('WebSocket соединение закрыто');\n      this.reconnect();\n    };\n\n    this.ws.onmessage = this.handleMessage.bind(this);\n  }\n\n  handleMessage(event) {\n    try {\n      const message = JSON.parse(event.data);\n      const handler = this.handlers.get(message.type);\n      if (handler) handler(message);\n    } catch (error) {\n      console.error('Ошибка обработки сообщения:', error);\n    }\n  }\n\n  reconnect() {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      const timeout = Math.min(1000 * Math.pow(2, this.reconnectAttempts), 30000);\n      setTimeout(() => this.connect(), timeout);\n    }\n  }\n\n  on(type, callback) {\n    this.handlers.set(type, callback);\n  }\n\n  send(message) {\n    if (this.ws?.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify(message));\n    }\n  }\n\n  login(nickname) {\n    this.send({ type: 'login', nickname });\n  }\n\n  sendMessage(text) {\n    this.send({ type: 'message', text });\n  }\n\n  close() {\n    this.ws?.close();\n  }\n}\n","export function createMessageElement(from, text, timestamp, isOwn) {\n  const time = new Date(timestamp).toLocaleTimeString();\n  return `\n        <div class=\"message ${isOwn ? 'own' : 'other'}\">\n            <div class=\"message-header\">${isOwn ? 'You' : from}</div>\n            <div class=\"message-text\">${escapeHtml(text)}</div>\n            <div class=\"message-time\">${time}</div>\n        </div>\n    `;\n}\n\nexport function createUserElement(user, isCurrentUser) {\n  return `<li class=\"user ${isCurrentUser ? 'current' : ''}\">${isCurrentUser ? 'You' : escapeHtml(user)}</li>`;\n}\n\nfunction escapeHtml(text) {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n","import './css/style.css';\nimport Chat from './js/chat.js';\n\nconst chat = new Chat();\n","import WebSocketClient from './websocket.js';\nimport { createMessageElement, createUserElement } from './templates.js';\n\nexport default class Chat {\n  constructor() {\n    this.client = null;\n    this.nickname = null;\n    this.messagesList = document.getElementById('messages');\n    this.usersList = document.getElementById('usersList');\n    this.messageForm = document.getElementById('messageForm');\n    this.messageInput = document.getElementById('messageInput');\n\n    this.init();\n  }\n\n  async init() {\n    try {\n      const nickname = await this.promptNickname();\n      if (!nickname) return;\n\n      await this.initWebSocket(nickname);\n      this.bindEvents();\n    } catch (error) {\n      console.error('Ошибка инициализации чата:', error);\n      setTimeout(() => this.init(), 3000);\n    }\n  }\n\n  async promptNickname() {\n    const nickname = prompt('Введите ваш никнейм:');\n    if (!nickname?.trim()) return null;\n    return nickname.trim();\n  }\n\n  async initWebSocket(nickname) {\n    const protocol = location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const host = location.hostname === 'localhost' ? 'localhost:7070' : location.host;\n\n    this.client = new WebSocketClient(`${protocol}//${host}`);\n\n    this.setupWebSocketHandlers();\n    await this.client.connect();\n    this.client.login(nickname);\n  }\n\n  setupWebSocketHandlers() {\n    this.client.on('login', this.handleLogin.bind(this));\n    this.client.on('users', this.updateUserList.bind(this));\n    this.client.on('message', this.addMessage.bind(this));\n  }\n\n  bindEvents() {\n    this.messageForm.addEventListener('submit', this.handleSubmit.bind(this));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const text = this.messageInput.value.trim();\n    if (text) {\n      this.client.sendMessage(text);\n      this.messageInput.value = '';\n    }\n  }\n\n  handleLogin(message) {\n    if (!message.success) {\n      alert(message.message);\n      this.init();\n      return;\n    }\n    this.nickname = message.nickname;\n  }\n\n  updateUserList(users) {\n    this.usersList.innerHTML = users\n      .map((user) => createUserElement(user, user === this.nickname))\n      .join('');\n  }\n\n  addMessage({ from, text, timestamp }) {\n    this.messagesList.insertAdjacentHTML(\n      'beforeend',\n      createMessageElement(from, text, timestamp, from === this.nickname),\n    );\n    this.messagesList.scrollTop = this.messagesList.scrollHeight;\n  }\n}\n"],"names":["WebSocketClient","constructor","url","this","ws","handlers","Map","reconnectAttempts","maxReconnectAttempts","connect","Promise","resolve","reject","WebSocket","bindEvents","error","onopen","console","log","onerror","onclose","reconnect","onmessage","handleMessage","bind","event","message","JSON","parse","data","handler","get","type","timeout","Math","min","pow","setTimeout","on","callback","set","send","readyState","OPEN","stringify","login","nickname","sendMessage","text","close","escapeHtml","div","document","createElement","textContent","innerHTML","client","messagesList","getElementById","usersList","messageForm","messageInput","init","promptNickname","initWebSocket","prompt","trim","protocol","location","host","hostname","setupWebSocketHandlers","handleLogin","updateUserList","addMessage","addEventListener","handleSubmit","preventDefault","value","success","alert","users","map","user","isCurrentUser","createUserElement","join","from","timestamp","insertAdjacentHTML","isOwn","time","Date","toLocaleTimeString","createMessageElement","scrollTop","scrollHeight"],"sourceRoot":""}