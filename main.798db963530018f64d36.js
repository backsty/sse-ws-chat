(()=>{"use strict";class t{constructor(t){this.url=t,this.ws=null,this.handlers=new Map,this.reconnectAttempts=0,this.maxReconnectAttempts=5}connect(){return new Promise(((t,e)=>{try{this.ws=new WebSocket(this.url),this.bindEvents(t,e)}catch(t){e(t)}}))}bindEvents(t,e){this.ws.onopen=()=>{console.log("WebSocket соединение установлено"),this.reconnectAttempts=0,t()},this.ws.onerror=t=>{console.error("WebSocket ошибка:",t),e(t)},this.ws.onclose=()=>{console.log("WebSocket соединение закрыто"),this.reconnect()},this.ws.onmessage=this.handleMessage.bind(this)}handleMessage(t){try{const e=JSON.parse(t.data),s=this.handlers.get(e.type);s&&s(e)}catch(t){console.error("Ошибка обработки сообщения:",t)}}reconnect(){if(this.reconnectAttempts<this.maxReconnectAttempts){this.reconnectAttempts++;const t=Math.min(1e3*Math.pow(2,this.reconnectAttempts),3e4);setTimeout((()=>this.connect()),t)}}on(t,e){this.handlers.set(t,e)}send(t){this.ws?.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify(t))}login(t){this.send({type:"login",nickname:t})}sendMessage(t){this.send({type:"message",text:t})}close(){this.ws?.close()}}function e(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}new class{constructor(){this.client=null,this.nickname=null,this.messagesList=document.getElementById("messages"),this.usersList=document.getElementById("usersList"),this.messageForm=document.getElementById("messageForm"),this.messageInput=document.getElementById("messageInput"),this.init()}async init(){try{const t=await this.promptNickname();if(!t)return;await this.initWebSocket(t),this.bindEvents()}catch(t){console.error("Ошибка инициализации чата:",t),setTimeout((()=>this.init()),3e3)}}async promptNickname(){const t=prompt("Введите ваш никнейм:");return t?.trim()?t.trim():null}async initWebSocket(e){const s="https:"===location.protocol?"wss:":"ws:",n="localhost"===location.hostname?"localhost:7070":location.host;this.client=new t(`${s}//${n}`),this.setupWebSocketHandlers(),await this.client.connect(),this.client.login(e)}setupWebSocketHandlers(){this.client.on("login",this.handleLogin.bind(this)),this.client.on("users",this.updateUserList.bind(this)),this.client.on("message",this.addMessage.bind(this))}bindEvents(){this.messageForm.addEventListener("submit",this.handleSubmit.bind(this))}handleSubmit(t){t.preventDefault();const e=this.messageInput.value.trim();e&&(this.client.sendMessage(e),this.messageInput.value="")}handleLogin(t){if(!t.success)return alert(t.message),void this.init();this.nickname=t.nickname}updateUserList(t){this.usersList.innerHTML=t.map((t=>function(t,s){return`<li class="user ${s?"current":""}">${s?"You":e(t)}</li>`}(t,t===this.nickname))).join("")}addMessage({from:t,text:s,timestamp:n}){this.messagesList.insertAdjacentHTML("beforeend",function(t,s,n,i){const o=new Date(n).toLocaleTimeString();return`\n        <div class="message ${i?"own":"other"}">\n            <div class="message-header">${i?"You":t}</div>\n            <div class="message-text">${e(s)}</div>\n            <div class="message-time">${o}</div>\n        </div>\n    `}(t,s,n,t===this.nickname)),this.messagesList.scrollTop=this.messagesList.scrollHeight}}})();
//# sourceMappingURL=main.798db963530018f64d36.js.map