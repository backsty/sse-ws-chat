{"version":3,"file":"main.451f508f7984c60ca496.js","mappings":"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","sources":["webpack://sse-ws-chat/./src/frontend/js/websocket.js","webpack://sse-ws-chat/./src/frontend/js/templates.js","webpack://sse-ws-chat/./src/frontend/js/utils/cookies.js","webpack://sse-ws-chat/./src/frontend/js/chat.js","webpack://sse-ws-chat/./src/frontend/index.js"],"sourcesContent":["const SETTINGS = {\n  TIMEOUT: 10000,\n  RECONNECT: {\n    MAX_ATTEMPTS: 5,\n    BASE_DELAY: 1000,\n    MAX_DELAY: 30000,\n  },\n};\n\nexport default class WebSocketClient {\n  constructor() {\n    this.ws = null;\n    this.handlers = new Map();\n    this.reconnectAttempts = 0;\n    this.connected = false;\n    this.authorized = false;\n  }\n\n  getWebSocketUrl() {\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const host =\n      process.env.NODE_ENV === 'development' ? 'localhost:7070' : 'sse-ws-chat.onrender.com';\n    return `${protocol}//${host}/ws`;\n  }\n\n  async connect() {\n    if (this.ws) {\n      this.close();\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        this.ws = new WebSocket(this.getWebSocketUrl());\n\n        const timeout = setTimeout(() => {\n          this.close();\n          reject(new Error('Таймаут подключения'));\n        }, SETTINGS.TIMEOUT);\n\n        this.ws.onopen = () => {\n          clearTimeout(timeout);\n          this.connected = true;\n          this.bindEvents();\n          resolve(true);\n        };\n\n        this.ws.onerror = (error) => {\n          clearTimeout(timeout);\n          this.connected = false;\n          reject(error);\n        };\n\n        this.ws.onclose = () => {\n          clearTimeout(timeout);\n          this.connected = false;\n          reject(new Error('Соединение закрыто'));\n        };\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  waitForConnection() {\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        this.close();\n        reject(new Error('Таймаут подключения'));\n      }, 5000);\n\n      this.ws.onopen = () => {\n        clearTimeout(timeout);\n        this.connected = true;\n        this.bindEvents();\n        resolve();\n      };\n\n      this.ws.onerror = (error) => {\n        clearTimeout(timeout);\n        this.connected = false;\n        reject(error);\n      };\n    });\n  }\n\n  async handleReconnect() {\n    if (this.reconnectAttempts >= RECONNECT.MAX_ATTEMPTS) {\n      throw new Error('Превышено количество попыток подключения');\n    }\n\n    this.reconnectAttempts++;\n    const delay = Math.min(\n      RECONNECT.BASE_DELAY * Math.pow(2, this.reconnectAttempts),\n      RECONNECT.MAX_DELAY,\n    );\n\n    await new Promise((resolve) => setTimeout(resolve, delay));\n    return this.connect();\n  }\n\n  bindEvents() {\n    if (!this.ws) return;\n\n    this.ws.onmessage = this.handleMessage.bind(this);\n    this.ws.onclose = this.handleClose.bind(this);\n    this.ws.onerror = this.handleError.bind(this);\n  }\n\n  handleMessage(event) {\n    try {\n      const message = JSON.parse(event.data);\n      const handler = this.handlers.get(message.type);\n      if (handler) handler(message);\n    } catch (error) {\n      console.error('Ошибка обработки сообщения:', error);\n    }\n  }\n\n  handleClose(event) {\n    this.connected = false;\n    if (event.code !== 1000) {\n      console.log('WebSocket закрыт с кодом:', event.code);\n      this.reconnect();\n    }\n  }\n\n  handleError(error) {\n    console.error('WebSocket ошибка:', error);\n    this.connected = false;\n  }\n\n  on(type, callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Callback должен быть функцией');\n    }\n    this.handlers.set(type, callback);\n  }\n\n  send(data) {\n    if (!this.isConnected()) {\n      console.error('Попытка отправки сообщения при неактивном соединении');\n      return;\n    }\n    try {\n      this.ws.send(JSON.stringify(data));\n    } catch (error) {\n      console.error('Ошибка отправки:', error);\n      this.reconnect();\n    }\n  }\n\n  login(nickname, sessionId) {\n    return new Promise((resolve, reject) => {\n      if (!this.isConnected()) {\n        reject(new Error('WebSocket не подключен'));\n        return;\n      }\n\n      const loginHandler = (response) => {\n        if (response.type === 'login') {\n          this.handlers.delete('login');\n          resolve(response);\n        }\n      };\n\n      this.handlers.set('login', loginHandler);\n\n      this.send({\n        type: 'login',\n        nickname,\n        sessionId,\n      });\n    });\n  }\n\n  sendMessage(text) {\n    this.send({\n      type: 'message',\n      text,\n    });\n  }\n\n  async reconnect() {\n    this.close();\n    await this.connect();\n  }\n\n  isConnected() {\n    return this.ws && this.ws.readyState === WebSocket.OPEN && this.connected;\n  }\n\n  close() {\n    if (this.ws) {\n      this.connected = false;\n      try {\n        this.ws.close(1000); // Normal closure\n      } catch (error) {\n        console.error('Ошибка закрытия WebSocket:', error);\n      }\n      this.ws = null;\n    }\n  }\n}\n","export function createMessageElement(from, text, timestamp, isOwn) {\n  const time = new Intl.DateTimeFormat('ru', {\n    hour: '2-digit',\n    minute: '2-digit',\n  }).format(new Date(timestamp));\n\n  return `\n    <div class=\"message ${isOwn ? 'own' : 'other'}\">\n      <div class=\"message-header\">${isOwn ? 'Вы' : escapeHtml(from)}</div>\n      <div class=\"message-text\">${escapeHtml(text)}</div>\n      <div class=\"message-time\">${time}</div>\n    </div>\n  `;\n}\n\nexport function createUserElement(user, isCurrentUser) {\n  return `\n    <li class=\"user ${isCurrentUser ? 'current' : ''}\">\n      ${isCurrentUser ? 'Вы' : escapeHtml(user)}\n    </li>\n  `;\n}\n\nfunction escapeHtml(text) {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n","export function setCookie(name, value, days = 7) {\n  const date = new Date();\n  date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n  const encodedValue = encodeURIComponent(value);\n  document.cookie = `${name}=${encodedValue};expires=${date.toUTCString()};path=/;SameSite=Strict;Secure`;\n}\n\nexport function getCookie(name) {\n  try {\n    const matches = document.cookie.match(\n      new RegExp('(?:^|; )' + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + '=([^;]*)'),\n    );\n    return matches ? decodeURIComponent(matches[1]) : null;\n  } catch (error) {\n    console.error('Ошибка чтения cookie:', error);\n    return null;\n  }\n}\n\nexport function deleteCookie(name) {\n  document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;SameSite=Strict;Secure`;\n}\n\nexport function hasCookie(name) {\n  return getCookie(name) !== null;\n}\n","import WebSocketClient from './websocket.js';\nimport { createMessageElement, createUserElement } from './templates.js';\nimport { setCookie, getCookie, deleteCookie, hasCookie } from './utils/cookies.js';\n\nconst COOKIE_SETTINGS = {\n  nickname: 'nickname',\n  sessionId: 'sessionId',\n};\n\nexport default class Chat {\n  constructor() {\n    this.webSocket = null;\n    this.nickname = getCookie(COOKIE_SETTINGS.nickname);\n    this.sessionId = getCookie(COOKIE_SETTINGS.sessionId) || crypto.randomUUID();\n    this.messagesList = document.getElementById('messages');\n    this.usersList = document.getElementById('usersList');\n    this.messageForm = document.getElementById('messageForm');\n    this.messageInput = document.getElementById('messageInput');\n    this.initialized = false;\n    this.authorized = false;\n  }\n\n  async init() {\n    if (this.initialized) return;\n\n    try {\n      if (!this.nickname || !this.validateNickname(this.nickname).valid) {\n        this.nickname = await this.promptNickname();\n        if (!this.nickname) return;\n\n        setCookie('nickname', this.nickname);\n        setCookie('sessionId', this.sessionId);\n      }\n\n      await this.initWebSocket();\n      this.bindEvents();\n      this.initialized = true;\n    } catch (error) {\n      console.error('Ошибка инициализации:', error);\n      this.cleanup();\n      alert('Ошибка подключения к чату. Попробуйте позже.');\n    }\n  }\n\n  async promptNickname() {\n    while (true) {\n      const nickname = prompt('Введите никнейм (2-20 символов):');\n      if (!nickname) return null;\n\n      const isValid = this.validateNickname(nickname);\n      if (isValid.valid) return nickname;\n\n      alert(isValid.message);\n    }\n  }\n\n  validateNickname(nickname) {\n    if (nickname.length < 2 || nickname.length > 20) {\n      return { valid: false, message: 'Длина никнейма должна быть от 2 до 20 символов' };\n    }\n    if (!/^[a-zA-Z0-9_-]+$/.test(nickname)) {\n      return { valid: false, message: 'Используйте только буквы, цифры, дефис и подчеркивание' };\n    }\n    return { valid: true };\n  }\n\n  async initWebSocket() {\n    try {\n      this.webSocket = new WebSocketClient();\n      await this.webSocket.connect();\n      this.setupWebSocketHandlers();\n\n      const loginResult = await this.webSocket.login(this.nickname, this.sessionId);\n      if (!loginResult.success) {\n        throw new Error(loginResult.message || 'Ошибка авторизации');\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Ошибка подключения:', error);\n      this.cleanup();\n      throw error;\n    }\n  }\n\n  setupWebSocketHandlers() {\n    this.webSocket.on('login', this.handleLogin.bind(this));\n    this.webSocket.on('users', this.updateUserList.bind(this));\n    this.webSocket.on('message', this.addMessage.bind(this));\n    this.webSocket.on('error', this.handleError.bind(this));\n  }\n\n  bindEvents() {\n    this.messageForm.addEventListener('submit', this.handleSubmit.bind(this));\n    window.addEventListener('beforeunload', () => {\n      if (this.webSocket) {\n        this.webSocket.close();\n      }\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const text = this.messageInput.value.trim();\n\n    if (!text) return;\n\n    if (this.webSocket && this.webSocket.isConnected()) {\n      this.webSocket.sendMessage(text);\n      this.messageInput.value = '';\n    } else {\n      console.error('Чат не подключен');\n      this.reconnect();\n    }\n  }\n\n  async handleLogin(message) {\n    try {\n      if (!message.success) {\n        console.error('Ошибка авторизации:', message.message);\n        this.authorized = false;\n        this.cleanup();\n        await this.reconnect();\n        return;\n      }\n\n      this.authorized = true;\n      console.log('Успешная авторизация');\n    } catch (error) {\n      console.error('Ошибка обработки авторизации:', error);\n      this.cleanup();\n    }\n  }\n\n  handleError(error) {\n    console.error('Ошибка чата:', error);\n    alert(error.message || 'Произошла ошибка');\n    if (error.type === 'auth') {\n      this.reconnect();\n    }\n  }\n\n  async reconnect() {\n    this.initialized = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = null;\n    }\n    await this.initWebSocket();\n    if (this.webSocket && this.webSocket.isConnected()) {\n      this.webSocket.login(this.nickname, this.sessionId);\n    }\n  }\n\n  updateUserList(users) {\n    if (!Array.isArray(users)) return;\n\n    this.usersList.innerHTML = users\n      .map((user) => createUserElement(user, user === this.nickname))\n      .join('');\n  }\n\n  addMessage({ from, text, timestamp }) {\n    if (!from || !text || !timestamp) return;\n\n    const messageHTML = createMessageElement(from, text, timestamp, from === this.nickname);\n    this.messagesList.insertAdjacentHTML('beforeend', messageHTML);\n    this.messagesList.scrollTop = this.messagesList.scrollHeight;\n  }\n\n  cleanup() {\n    try {\n      deleteCookie(COOKIE_SETTINGS.nickname);\n      deleteCookie(COOKIE_SETTINGS.sessionId);\n      this.nickname = null;\n      this.sessionId = crypto.randomUUID();\n      this.initialized = false;\n      this.authorized = false;\n    } catch (error) {\n      console.error('Ошибка очистки состояния:', error);\n    }\n  }\n\n  destroy() {\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = null;\n    }\n    this.cleanup();\n    this.initialized = false;\n    this.authorized = false;\n    this.messagesList.innerHTML = '';\n    this.usersList.innerHTML = '';\n  }\n}\n","import './css/style.css';\nimport Chat from './js/chat.js';\n\nclass ChatApp {\n  constructor() {\n    this.chat = null;\n    this.init();\n  }\n\n  async init() {\n    try {\n      if (this.chat) {\n        console.warn('Чат уже инициализирован');\n        return;\n      }\n\n      this.chat = new Chat();\n      await this.chat.init();\n\n      if (process.env.NODE_ENV === 'development') {\n        window.chat = this.chat;\n      }\n\n      this.bindEvents();\n    } catch (error) {\n      console.error('Ошибка инициализации чата:', error);\n      alert('Не удалось подключиться к чату. Попробуйте перезагрузить страницу.');\n    }\n  }\n\n  bindEvents() {\n    window.addEventListener('beforeunload', this.cleanup.bind(this));\n    window.addEventListener('unload', this.cleanup.bind(this));\n  }\n\n  cleanup() {\n    if (this.chat) {\n      this.chat.destroy();\n      this.chat = null;\n    }\n    if (window.chat) {\n      delete window.chat;\n    }\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new ChatApp();\n});\n"],"names":["SETTINGS","WebSocketClient","constructor","this","ws","handlers","Map","reconnectAttempts","connected","authorized","getWebSocketUrl","window","location","protocol","connect","close","Promise","resolve","reject","WebSocket","timeout","setTimeout","Error","onopen","clearTimeout","bindEvents","onerror","error","onclose","waitForConnection","handleReconnect","RECONNECT","MAX_ATTEMPTS","delay","Math","min","BASE_DELAY","pow","MAX_DELAY","onmessage","handleMessage","bind","handleClose","handleError","event","message","JSON","parse","data","handler","get","type","console","code","log","reconnect","on","callback","set","send","isConnected","stringify","login","nickname","sessionId","response","delete","sendMessage","text","readyState","OPEN","escapeHtml","div","document","createElement","textContent","innerHTML","setCookie","name","value","days","date","Date","setTime","getTime","encodedValue","encodeURIComponent","cookie","toUTCString","getCookie","matches","match","RegExp","replace","decodeURIComponent","deleteCookie","COOKIE_SETTINGS","Chat","webSocket","crypto","randomUUID","messagesList","getElementById","usersList","messageForm","messageInput","initialized","init","validateNickname","valid","promptNickname","initWebSocket","cleanup","alert","prompt","isValid","length","test","setupWebSocketHandlers","loginResult","success","handleLogin","updateUserList","addMessage","addEventListener","handleSubmit","preventDefault","trim","users","Array","isArray","map","user","isCurrentUser","createUserElement","join","from","timestamp","messageHTML","isOwn","time","Intl","DateTimeFormat","hour","minute","format","createMessageElement","insertAdjacentHTML","scrollTop","scrollHeight","destroy","ChatApp","chat","warn"],"sourceRoot":""}